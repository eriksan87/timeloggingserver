// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Condivisione.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Condivisione.EntityCondivise;

public interface EProgettoCondivisoPrx extends EAttivitaCondivisaPrx
{
    public java.sql.Timestamp[] getProroghe();

    public java.sql.Timestamp[] getProroghe(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getProroghe();

    public Ice.AsyncResult begin_getProroghe(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getProroghe(Ice.Callback __cb);

    public Ice.AsyncResult begin_getProroghe(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getProroghe(Callback_EProgettoCondiviso_getProroghe __cb);

    public Ice.AsyncResult begin_getProroghe(java.util.Map<String, String> __ctx, Callback_EProgettoCondiviso_getProroghe __cb);

    public java.sql.Timestamp[] end_getProroghe(Ice.AsyncResult __result);

    public void setProroghe(java.sql.Timestamp[] p);

    public void setProroghe(java.sql.Timestamp[] p, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setProroghe(java.sql.Timestamp[] p);

    public Ice.AsyncResult begin_setProroghe(java.sql.Timestamp[] p, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setProroghe(java.sql.Timestamp[] p, Ice.Callback __cb);

    public Ice.AsyncResult begin_setProroghe(java.sql.Timestamp[] p, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setProroghe(java.sql.Timestamp[] p, Callback_EProgettoCondiviso_setProroghe __cb);

    public Ice.AsyncResult begin_setProroghe(java.sql.Timestamp[] p, java.util.Map<String, String> __ctx, Callback_EProgettoCondiviso_setProroghe __cb);

    public void end_setProroghe(Ice.AsyncResult __result);

    public void setEClienteCondiviso(EClienteCondiviso cliente);

    public void setEClienteCondiviso(EClienteCondiviso cliente, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setEClienteCondiviso(EClienteCondiviso cliente);

    public Ice.AsyncResult begin_setEClienteCondiviso(EClienteCondiviso cliente, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setEClienteCondiviso(EClienteCondiviso cliente, Ice.Callback __cb);

    public Ice.AsyncResult begin_setEClienteCondiviso(EClienteCondiviso cliente, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setEClienteCondiviso(EClienteCondiviso cliente, Callback_EProgettoCondiviso_setEClienteCondiviso __cb);

    public Ice.AsyncResult begin_setEClienteCondiviso(EClienteCondiviso cliente, java.util.Map<String, String> __ctx, Callback_EProgettoCondiviso_setEClienteCondiviso __cb);

    public void end_setEClienteCondiviso(Ice.AsyncResult __result);

    public ESottoprogettoCondiviso aggiungiSottoprogetto(String titolo, String descrizione, double budget, java.sql.Timestamp inizio, java.sql.Timestamp scadenza, EDipendenteCondiviso manager);

    public ESottoprogettoCondiviso aggiungiSottoprogetto(String titolo, String descrizione, double budget, java.sql.Timestamp inizio, java.sql.Timestamp scadenza, EDipendenteCondiviso manager, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_aggiungiSottoprogetto(String titolo, String descrizione, double budget, java.sql.Timestamp inizio, java.sql.Timestamp scadenza, EDipendenteCondiviso manager);

    public Ice.AsyncResult begin_aggiungiSottoprogetto(String titolo, String descrizione, double budget, java.sql.Timestamp inizio, java.sql.Timestamp scadenza, EDipendenteCondiviso manager, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_aggiungiSottoprogetto(String titolo, String descrizione, double budget, java.sql.Timestamp inizio, java.sql.Timestamp scadenza, EDipendenteCondiviso manager, Ice.Callback __cb);

    public Ice.AsyncResult begin_aggiungiSottoprogetto(String titolo, String descrizione, double budget, java.sql.Timestamp inizio, java.sql.Timestamp scadenza, EDipendenteCondiviso manager, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_aggiungiSottoprogetto(String titolo, String descrizione, double budget, java.sql.Timestamp inizio, java.sql.Timestamp scadenza, EDipendenteCondiviso manager, Callback_EProgettoCondiviso_aggiungiSottoprogetto __cb);

    public Ice.AsyncResult begin_aggiungiSottoprogetto(String titolo, String descrizione, double budget, java.sql.Timestamp inizio, java.sql.Timestamp scadenza, EDipendenteCondiviso manager, java.util.Map<String, String> __ctx, Callback_EProgettoCondiviso_aggiungiSottoprogetto __cb);

    public ESottoprogettoCondiviso end_aggiungiSottoprogetto(Ice.AsyncResult __result);

    public EClienteCondiviso getEClienteCondiviso();

    public EClienteCondiviso getEClienteCondiviso(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getEClienteCondiviso();

    public Ice.AsyncResult begin_getEClienteCondiviso(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getEClienteCondiviso(Ice.Callback __cb);

    public Ice.AsyncResult begin_getEClienteCondiviso(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getEClienteCondiviso(Callback_EProgettoCondiviso_getEClienteCondiviso __cb);

    public Ice.AsyncResult begin_getEClienteCondiviso(java.util.Map<String, String> __ctx, Callback_EProgettoCondiviso_getEClienteCondiviso __cb);

    public EClienteCondiviso end_getEClienteCondiviso(Ice.AsyncResult __result);

    public void setlistSp(java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> listSp);

    public void setlistSp(java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> listSp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setlistSp(java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> listSp);

    public Ice.AsyncResult begin_setlistSp(java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> listSp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setlistSp(java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> listSp, Ice.Callback __cb);

    public Ice.AsyncResult begin_setlistSp(java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> listSp, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setlistSp(java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> listSp, Callback_EProgettoCondiviso_setlistSp __cb);

    public Ice.AsyncResult begin_setlistSp(java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> listSp, java.util.Map<String, String> __ctx, Callback_EProgettoCondiviso_setlistSp __cb);

    public void end_setlistSp(Ice.AsyncResult __result);

    public java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> getlistSp();

    public java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> getlistSp(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getlistSp();

    public Ice.AsyncResult begin_getlistSp(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getlistSp(Ice.Callback __cb);

    public Ice.AsyncResult begin_getlistSp(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getlistSp(Callback_EProgettoCondiviso_getlistSp __cb);

    public Ice.AsyncResult begin_getlistSp(java.util.Map<String, String> __ctx, Callback_EProgettoCondiviso_getlistSp __cb);

    public java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> end_getlistSp(Ice.AsyncResult __result);

    public ESottoprogettoCondiviso getSp(String titolo);

    public ESottoprogettoCondiviso getSp(String titolo, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getSp(String titolo);

    public Ice.AsyncResult begin_getSp(String titolo, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getSp(String titolo, Ice.Callback __cb);

    public Ice.AsyncResult begin_getSp(String titolo, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getSp(String titolo, Callback_EProgettoCondiviso_getSp __cb);

    public Ice.AsyncResult begin_getSp(String titolo, java.util.Map<String, String> __ctx, Callback_EProgettoCondiviso_getSp __cb);

    public ESottoprogettoCondiviso end_getSp(Ice.AsyncResult __result);

    public double elaboraGuadagno();

    public double elaboraGuadagno(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_elaboraGuadagno();

    public Ice.AsyncResult begin_elaboraGuadagno(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_elaboraGuadagno(Ice.Callback __cb);

    public Ice.AsyncResult begin_elaboraGuadagno(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_elaboraGuadagno(Callback_EProgettoCondiviso_elaboraGuadagno __cb);

    public Ice.AsyncResult begin_elaboraGuadagno(java.util.Map<String, String> __ctx, Callback_EProgettoCondiviso_elaboraGuadagno __cb);

    public double end_elaboraGuadagno(Ice.AsyncResult __result);

    public double elaboraFattura();

    public double elaboraFattura(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_elaboraFattura();

    public Ice.AsyncResult begin_elaboraFattura(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_elaboraFattura(Ice.Callback __cb);

    public Ice.AsyncResult begin_elaboraFattura(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_elaboraFattura(Callback_EProgettoCondiviso_elaboraFattura __cb);

    public Ice.AsyncResult begin_elaboraFattura(java.util.Map<String, String> __ctx, Callback_EProgettoCondiviso_elaboraFattura __cb);

    public double end_elaboraFattura(Ice.AsyncResult __result);
}
