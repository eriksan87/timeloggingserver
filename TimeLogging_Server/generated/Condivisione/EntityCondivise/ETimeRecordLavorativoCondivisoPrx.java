// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Condivisione.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Condivisione.EntityCondivise;

public interface ETimeRecordLavorativoCondivisoPrx extends ETimeRecordCondivisoPrx
{
    public void setCosto(double costo);

    public void setCosto(double costo, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setCosto(double costo);

    public Ice.AsyncResult begin_setCosto(double costo, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setCosto(double costo, Ice.Callback __cb);

    public Ice.AsyncResult begin_setCosto(double costo, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setCosto(double costo, Callback_ETimeRecordLavorativoCondiviso_setCosto __cb);

    public Ice.AsyncResult begin_setCosto(double costo, java.util.Map<String, String> __ctx, Callback_ETimeRecordLavorativoCondiviso_setCosto __cb);

    public void end_setCosto(Ice.AsyncResult __result);

    public double getCosto();

    public double getCosto(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getCosto();

    public Ice.AsyncResult begin_getCosto(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getCosto(Ice.Callback __cb);

    public Ice.AsyncResult begin_getCosto(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getCosto(Callback_ETimeRecordLavorativoCondiviso_getCosto __cb);

    public Ice.AsyncResult begin_getCosto(java.util.Map<String, String> __ctx, Callback_ETimeRecordLavorativoCondiviso_getCosto __cb);

    public double end_getCosto(Ice.AsyncResult __result);

    public void setETaskCondiviso(ETaskCondiviso task);

    public void setETaskCondiviso(ETaskCondiviso task, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setETaskCondiviso(ETaskCondiviso task);

    public Ice.AsyncResult begin_setETaskCondiviso(ETaskCondiviso task, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setETaskCondiviso(ETaskCondiviso task, Ice.Callback __cb);

    public Ice.AsyncResult begin_setETaskCondiviso(ETaskCondiviso task, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setETaskCondiviso(ETaskCondiviso task, Callback_ETimeRecordLavorativoCondiviso_setETaskCondiviso __cb);

    public Ice.AsyncResult begin_setETaskCondiviso(ETaskCondiviso task, java.util.Map<String, String> __ctx, Callback_ETimeRecordLavorativoCondiviso_setETaskCondiviso __cb);

    public void end_setETaskCondiviso(Ice.AsyncResult __result);

    public ETaskCondiviso getETaskCondiviso();

    public ETaskCondiviso getETaskCondiviso(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getETaskCondiviso();

    public Ice.AsyncResult begin_getETaskCondiviso(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getETaskCondiviso(Ice.Callback __cb);

    public Ice.AsyncResult begin_getETaskCondiviso(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getETaskCondiviso(Callback_ETimeRecordLavorativoCondiviso_getETaskCondiviso __cb);

    public Ice.AsyncResult begin_getETaskCondiviso(java.util.Map<String, String> __ctx, Callback_ETimeRecordLavorativoCondiviso_getETaskCondiviso __cb);

    public ETaskCondiviso end_getETaskCondiviso(Ice.AsyncResult __result);

    public double calcolaCosto(java.util.ArrayList<ETariffaCondivisa> tariffe);

    public double calcolaCosto(java.util.ArrayList<ETariffaCondivisa> tariffe, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_calcolaCosto(java.util.ArrayList<ETariffaCondivisa> tariffe);

    public Ice.AsyncResult begin_calcolaCosto(java.util.ArrayList<ETariffaCondivisa> tariffe, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_calcolaCosto(java.util.ArrayList<ETariffaCondivisa> tariffe, Ice.Callback __cb);

    public Ice.AsyncResult begin_calcolaCosto(java.util.ArrayList<ETariffaCondivisa> tariffe, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_calcolaCosto(java.util.ArrayList<ETariffaCondivisa> tariffe, Callback_ETimeRecordLavorativoCondiviso_calcolaCosto __cb);

    public Ice.AsyncResult begin_calcolaCosto(java.util.ArrayList<ETariffaCondivisa> tariffe, java.util.Map<String, String> __ctx, Callback_ETimeRecordLavorativoCondiviso_calcolaCosto __cb);

    public double end_calcolaCosto(Ice.AsyncResult __result);
}
