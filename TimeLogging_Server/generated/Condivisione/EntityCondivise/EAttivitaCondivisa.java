// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Condivisione.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Condivisione.EntityCondivise;

public abstract class EAttivitaCondivisa extends EntityCondivisa
                                         implements _EAttivitaCondivisaOperations,
                                                    _EAttivitaCondivisaOperationsNC
{
    public EAttivitaCondivisa()
    {
        super();
    }

    public EAttivitaCondivisa(int id, String titolo, String descrizione, double budget, java.sql.Timestamp inizio, java.sql.Timestamp scadenza, EDipendenteCondiviso dipendente, EAttivitaCondivisa padre, double costo)
    {
        this.id = id;
        this.titolo = titolo;
        this.descrizione = descrizione;
        this.budget = budget;
        this.inizio = inizio;
        this.scadenza = scadenza;
        this.dipendente = dipendente;
        this.padre = padre;
        this.costo = costo;
    }

    public static final String[] __ids =
    {
        "::Condivisione::EntityCondivise::EAttivitaCondivisa",
        "::Condivisione::EntityCondivise::EntityCondivisa",
        "::Ice::Object"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[0];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[0];
    }

    public static String ice_staticId()
    {
        return __ids[0];
    }

    public final double elaboraCosti()
    {
        return elaboraCosti(null);
    }

    public final double getBudget()
    {
        return getBudget(null);
    }

    public final double getCosto()
    {
        return getCosto(null);
    }

    public final String getDescrizione()
    {
        return getDescrizione(null);
    }

    public final EDipendenteCondiviso getDipendente()
    {
        return getDipendente(null);
    }

    public final int getId()
    {
        return getId(null);
    }

    public final java.sql.Timestamp getInizio()
    {
        return getInizio(null);
    }

    public final EAttivitaCondivisa getPadre()
    {
        return getPadre(null);
    }

    public final java.sql.Timestamp getScadenza()
    {
        return getScadenza(null);
    }

    public final String getTitolo()
    {
        return getTitolo(null);
    }

    public final void setBudget(double budget)
    {
        setBudget(budget, null);
    }

    public final void setCosto(double costo)
    {
        setCosto(costo, null);
    }

    public final void setDescrizione(String descrizione)
    {
        setDescrizione(descrizione, null);
    }

    public final void setDipendente(EDipendenteCondiviso dipendente)
    {
        setDipendente(dipendente, null);
    }

    public final void setId(int id)
    {
        setId(id, null);
    }

    public final void setInizio(java.sql.Timestamp inizio)
    {
        setInizio(inizio, null);
    }

    public final void setPadre(EAttivitaCondivisa padre)
    {
        setPadre(padre, null);
    }

    public final void setScadenza(java.sql.Timestamp scadenza)
    {
        setScadenza(scadenza, null);
    }

    public final void setTitolo(String titolo)
    {
        setTitolo(titolo, null);
    }

    public static Ice.DispatchStatus ___setId(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int id;
        id = __is.readInt();
        __inS.endReadParams();
        __obj.setId(id, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setTitolo(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String titolo;
        titolo = __is.readString();
        __inS.endReadParams();
        __obj.setTitolo(titolo, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setDescrizione(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String descrizione;
        descrizione = __is.readString();
        __inS.endReadParams();
        __obj.setDescrizione(descrizione, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setBudget(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        double budget;
        budget = __is.readDouble();
        __inS.endReadParams();
        __obj.setBudget(budget, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setInizio(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        java.sql.Timestamp inizio;
        inizio = (java.sql.Timestamp)__is.readSerializable();
        __inS.endReadParams();
        __obj.setInizio(inizio, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setScadenza(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        java.sql.Timestamp scadenza;
        scadenza = (java.sql.Timestamp)__is.readSerializable();
        __inS.endReadParams();
        __obj.setScadenza(scadenza, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setDipendente(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        EDipendenteCondivisoHolder dipendente = new EDipendenteCondivisoHolder();
        __is.readObject(dipendente);
        __is.readPendingObjects();
        __inS.endReadParams();
        __obj.setDipendente(dipendente.value, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setPadre(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        EAttivitaCondivisaHolder padre = new EAttivitaCondivisaHolder();
        __is.readObject(padre);
        __is.readPendingObjects();
        __inS.endReadParams();
        __obj.setPadre(padre.value, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setCosto(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        double costo;
        costo = __is.readDouble();
        __inS.endReadParams();
        __obj.setCosto(costo, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getId(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        int __ret = __obj.getId(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeInt(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getTitolo(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        String __ret = __obj.getTitolo(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeString(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getDescrizione(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        String __ret = __obj.getDescrizione(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeString(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getBudget(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        double __ret = __obj.getBudget(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeDouble(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getInizio(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        java.sql.Timestamp __ret = __obj.getInizio(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeSerializable(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getScadenza(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        java.sql.Timestamp __ret = __obj.getScadenza(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeSerializable(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getDipendente(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        EDipendenteCondiviso __ret = __obj.getDipendente(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeObject(__ret);
        __os.writePendingObjects();
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getPadre(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        EAttivitaCondivisa __ret = __obj.getPadre(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeObject(__ret);
        __os.writePendingObjects();
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getCosto(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        double __ret = __obj.getCosto(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeDouble(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___elaboraCosti(EAttivitaCondivisa __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        double __ret = __obj.elaboraCosti(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeDouble(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    private final static String[] __all =
    {
        "elaboraCosti",
        "getBudget",
        "getCosto",
        "getDescrizione",
        "getDipendente",
        "getId",
        "getInizio",
        "getPadre",
        "getScadenza",
        "getTitolo",
        "ice_id",
        "ice_ids",
        "ice_isA",
        "ice_ping",
        "setBudget",
        "setCosto",
        "setDescrizione",
        "setDipendente",
        "setId",
        "setInizio",
        "setPadre",
        "setScadenza",
        "setTitolo"
    };

    public Ice.DispatchStatus __dispatch(IceInternal.Incoming in, Ice.Current __current)
    {
        int pos = java.util.Arrays.binarySearch(__all, __current.operation);
        if(pos < 0)
        {
            throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
        }

        switch(pos)
        {
            case 0:
            {
                return ___elaboraCosti(this, in, __current);
            }
            case 1:
            {
                return ___getBudget(this, in, __current);
            }
            case 2:
            {
                return ___getCosto(this, in, __current);
            }
            case 3:
            {
                return ___getDescrizione(this, in, __current);
            }
            case 4:
            {
                return ___getDipendente(this, in, __current);
            }
            case 5:
            {
                return ___getId(this, in, __current);
            }
            case 6:
            {
                return ___getInizio(this, in, __current);
            }
            case 7:
            {
                return ___getPadre(this, in, __current);
            }
            case 8:
            {
                return ___getScadenza(this, in, __current);
            }
            case 9:
            {
                return ___getTitolo(this, in, __current);
            }
            case 10:
            {
                return ___ice_id(this, in, __current);
            }
            case 11:
            {
                return ___ice_ids(this, in, __current);
            }
            case 12:
            {
                return ___ice_isA(this, in, __current);
            }
            case 13:
            {
                return ___ice_ping(this, in, __current);
            }
            case 14:
            {
                return ___setBudget(this, in, __current);
            }
            case 15:
            {
                return ___setCosto(this, in, __current);
            }
            case 16:
            {
                return ___setDescrizione(this, in, __current);
            }
            case 17:
            {
                return ___setDipendente(this, in, __current);
            }
            case 18:
            {
                return ___setId(this, in, __current);
            }
            case 19:
            {
                return ___setInizio(this, in, __current);
            }
            case 20:
            {
                return ___setPadre(this, in, __current);
            }
            case 21:
            {
                return ___setScadenza(this, in, __current);
            }
            case 22:
            {
                return ___setTitolo(this, in, __current);
            }
        }

        assert(false);
        throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, false);
        __os.writeInt(id);
        __os.writeString(titolo);
        __os.writeString(descrizione);
        __os.writeDouble(budget);
        __os.writeSerializable(inizio);
        __os.writeSerializable(scadenza);
        __os.writeObject(dipendente);
        __os.writeObject(padre);
        __os.writeDouble(costo);
        __os.endWriteSlice();
        super.__writeImpl(__os);
    }

    private class Patcher implements IceInternal.Patcher
    {
        Patcher(int member)
        {
            __member = member;
        }

        public void
        patch(Ice.Object v)
        {
            switch(__member)
            {
            case 0:
                __typeId = "::Condivisione::EntityCondivise::EDipendenteCondiviso";
                if(v == null || v instanceof EDipendenteCondiviso)
                {
                    dipendente = (EDipendenteCondiviso)v;
                }
                else
                {
                    IceInternal.Ex.throwUOE(type(), v);
                }
                break;
            case 1:
                __typeId = "::Condivisione::EntityCondivise::EAttivitaCondivisa";
                if(v == null || v instanceof EAttivitaCondivisa)
                {
                    padre = (EAttivitaCondivisa)v;
                }
                else
                {
                    IceInternal.Ex.throwUOE(type(), v);
                }
                break;
            }
        }

        public String
        type()
        {
            return __typeId;
        }

        private int __member;
        private String __typeId;
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        id = __is.readInt();
        titolo = __is.readString();
        descrizione = __is.readString();
        budget = __is.readDouble();
        inizio = (java.sql.Timestamp)__is.readSerializable();
        scadenza = (java.sql.Timestamp)__is.readSerializable();
        __is.readObject(new Patcher(0));
        __is.readObject(new Patcher(1));
        costo = __is.readDouble();
        __is.endReadSlice();
        super.__readImpl(__is);
    }

    public int id;

    public String titolo;

    public String descrizione;

    public double budget;

    public java.sql.Timestamp inizio;

    public java.sql.Timestamp scadenza;

    public EDipendenteCondiviso dipendente;

    public EAttivitaCondivisa padre;

    public double costo;

    public static final long serialVersionUID = -35406941L;
}
