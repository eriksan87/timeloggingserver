// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Condivisione.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Condivisione.EntityCondivise;

public abstract class ETimeRecordCondiviso extends EntityCondivisa
                                           implements _ETimeRecordCondivisoOperations,
                                                      _ETimeRecordCondivisoOperationsNC
{
    public ETimeRecordCondiviso()
    {
        super();
    }

    public ETimeRecordCondiviso(int id, String commento, java.sql.Timestamp inizio, java.sql.Timestamp fine, EConsulenteCondiviso consulente)
    {
        this.id = id;
        this.commento = commento;
        this.inizio = inizio;
        this.fine = fine;
        this.consulente = consulente;
    }

    public static final String[] __ids =
    {
        "::Condivisione::EntityCondivise::ETimeRecordCondiviso",
        "::Condivisione::EntityCondivise::EntityCondivisa",
        "::Ice::Object"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[0];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[0];
    }

    public static String ice_staticId()
    {
        return __ids[0];
    }

    public final String getCommento()
    {
        return getCommento(null);
    }

    public final EConsulenteCondiviso getConsulente()
    {
        return getConsulente(null);
    }

    public final java.sql.Timestamp getFine()
    {
        return getFine(null);
    }

    public final int getId()
    {
        return getId(null);
    }

    public final java.sql.Timestamp getInizio()
    {
        return getInizio(null);
    }

    public final void setCommento(String commento)
    {
        setCommento(commento, null);
    }

    public final void setConsulente(EConsulenteCondiviso consulente)
    {
        setConsulente(consulente, null);
    }

    public final void setFine(java.sql.Timestamp fine)
    {
        setFine(fine, null);
    }

    public final void setId(int id)
    {
        setId(id, null);
    }

    public final void setInizio(java.sql.Timestamp inizio)
    {
        setInizio(inizio, null);
    }

    public static Ice.DispatchStatus ___setId(ETimeRecordCondiviso __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int id;
        id = __is.readInt();
        __inS.endReadParams();
        __obj.setId(id, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setCommento(ETimeRecordCondiviso __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String commento;
        commento = __is.readString();
        __inS.endReadParams();
        __obj.setCommento(commento, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setInizio(ETimeRecordCondiviso __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        java.sql.Timestamp inizio;
        inizio = (java.sql.Timestamp)__is.readSerializable();
        __inS.endReadParams();
        __obj.setInizio(inizio, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setFine(ETimeRecordCondiviso __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        java.sql.Timestamp fine;
        fine = (java.sql.Timestamp)__is.readSerializable();
        __inS.endReadParams();
        __obj.setFine(fine, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setConsulente(ETimeRecordCondiviso __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        EConsulenteCondivisoHolder consulente = new EConsulenteCondivisoHolder();
        __is.readObject(consulente);
        __is.readPendingObjects();
        __inS.endReadParams();
        __obj.setConsulente(consulente.value, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getId(ETimeRecordCondiviso __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        int __ret = __obj.getId(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeInt(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getCommento(ETimeRecordCondiviso __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        String __ret = __obj.getCommento(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeString(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getInizio(ETimeRecordCondiviso __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        java.sql.Timestamp __ret = __obj.getInizio(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeSerializable(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getFine(ETimeRecordCondiviso __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        java.sql.Timestamp __ret = __obj.getFine(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeSerializable(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getConsulente(ETimeRecordCondiviso __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        EConsulenteCondiviso __ret = __obj.getConsulente(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeObject(__ret);
        __os.writePendingObjects();
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    private final static String[] __all =
    {
        "getCommento",
        "getConsulente",
        "getFine",
        "getId",
        "getInizio",
        "ice_id",
        "ice_ids",
        "ice_isA",
        "ice_ping",
        "setCommento",
        "setConsulente",
        "setFine",
        "setId",
        "setInizio"
    };

    public Ice.DispatchStatus __dispatch(IceInternal.Incoming in, Ice.Current __current)
    {
        int pos = java.util.Arrays.binarySearch(__all, __current.operation);
        if(pos < 0)
        {
            throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
        }

        switch(pos)
        {
            case 0:
            {
                return ___getCommento(this, in, __current);
            }
            case 1:
            {
                return ___getConsulente(this, in, __current);
            }
            case 2:
            {
                return ___getFine(this, in, __current);
            }
            case 3:
            {
                return ___getId(this, in, __current);
            }
            case 4:
            {
                return ___getInizio(this, in, __current);
            }
            case 5:
            {
                return ___ice_id(this, in, __current);
            }
            case 6:
            {
                return ___ice_ids(this, in, __current);
            }
            case 7:
            {
                return ___ice_isA(this, in, __current);
            }
            case 8:
            {
                return ___ice_ping(this, in, __current);
            }
            case 9:
            {
                return ___setCommento(this, in, __current);
            }
            case 10:
            {
                return ___setConsulente(this, in, __current);
            }
            case 11:
            {
                return ___setFine(this, in, __current);
            }
            case 12:
            {
                return ___setId(this, in, __current);
            }
            case 13:
            {
                return ___setInizio(this, in, __current);
            }
        }

        assert(false);
        throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, false);
        __os.writeInt(id);
        __os.writeString(commento);
        __os.writeSerializable(inizio);
        __os.writeSerializable(fine);
        __os.writeObject(consulente);
        __os.endWriteSlice();
        super.__writeImpl(__os);
    }

    private class Patcher implements IceInternal.Patcher
    {
        public void
        patch(Ice.Object v)
        {
            if(v == null || v instanceof EConsulenteCondiviso)
            {
                consulente = (EConsulenteCondiviso)v;
            }
            else
            {
                IceInternal.Ex.throwUOE(type(), v);
            }
        }

        public String
        type()
        {
            return "::Condivisione::EntityCondivise::EConsulenteCondiviso";
        }
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        id = __is.readInt();
        commento = __is.readString();
        inizio = (java.sql.Timestamp)__is.readSerializable();
        fine = (java.sql.Timestamp)__is.readSerializable();
        __is.readObject(new Patcher());
        __is.endReadSlice();
        super.__readImpl(__is);
    }

    public int id;

    public String commento;

    public java.sql.Timestamp inizio;

    public java.sql.Timestamp fine;

    public EConsulenteCondiviso consulente;

    public static final long serialVersionUID = 1171604235L;
}
