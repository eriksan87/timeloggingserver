// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Condivisione.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Condivisione.InterfacceCondivise;

public interface AttivitaManagerPrx extends Ice.ObjectPrx
{
    public void saveAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa e);

    public void saveAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa e, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_saveAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa e);

    public Ice.AsyncResult begin_saveAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa e, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_saveAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa e, Ice.Callback __cb);

    public Ice.AsyncResult begin_saveAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa e, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_saveAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa e, Callback_AttivitaManager_saveAttivita __cb);

    public Ice.AsyncResult begin_saveAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa e, java.util.Map<String, String> __ctx, Callback_AttivitaManager_saveAttivita __cb);

    public void end_saveAttivita(Ice.AsyncResult __result);

    public Condivisione.EntityCondivise.EProgettoCondiviso getProgetto(Condivisione.EntityCondivise.EProgettoCondiviso progetto);

    public Condivisione.EntityCondivise.EProgettoCondiviso getProgetto(Condivisione.EntityCondivise.EProgettoCondiviso progetto, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getProgetto(Condivisione.EntityCondivise.EProgettoCondiviso progetto);

    public Ice.AsyncResult begin_getProgetto(Condivisione.EntityCondivise.EProgettoCondiviso progetto, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getProgetto(Condivisione.EntityCondivise.EProgettoCondiviso progetto, Ice.Callback __cb);

    public Ice.AsyncResult begin_getProgetto(Condivisione.EntityCondivise.EProgettoCondiviso progetto, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getProgetto(Condivisione.EntityCondivise.EProgettoCondiviso progetto, Callback_AttivitaManager_getProgetto __cb);

    public Ice.AsyncResult begin_getProgetto(Condivisione.EntityCondivise.EProgettoCondiviso progetto, java.util.Map<String, String> __ctx, Callback_AttivitaManager_getProgetto __cb);

    public Condivisione.EntityCondivise.EProgettoCondiviso end_getProgetto(Ice.AsyncResult __result);

    public Condivisione.EntityCondivise.ESottoprogettoCondiviso getSottoprogetto(Condivisione.EntityCondivise.ESottoprogettoCondiviso sprogetto);

    public Condivisione.EntityCondivise.ESottoprogettoCondiviso getSottoprogetto(Condivisione.EntityCondivise.ESottoprogettoCondiviso sprogetto, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getSottoprogetto(Condivisione.EntityCondivise.ESottoprogettoCondiviso sprogetto);

    public Ice.AsyncResult begin_getSottoprogetto(Condivisione.EntityCondivise.ESottoprogettoCondiviso sprogetto, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getSottoprogetto(Condivisione.EntityCondivise.ESottoprogettoCondiviso sprogetto, Ice.Callback __cb);

    public Ice.AsyncResult begin_getSottoprogetto(Condivisione.EntityCondivise.ESottoprogettoCondiviso sprogetto, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getSottoprogetto(Condivisione.EntityCondivise.ESottoprogettoCondiviso sprogetto, Callback_AttivitaManager_getSottoprogetto __cb);

    public Ice.AsyncResult begin_getSottoprogetto(Condivisione.EntityCondivise.ESottoprogettoCondiviso sprogetto, java.util.Map<String, String> __ctx, Callback_AttivitaManager_getSottoprogetto __cb);

    public Condivisione.EntityCondivise.ESottoprogettoCondiviso end_getSottoprogetto(Ice.AsyncResult __result);

    public Condivisione.EntityCondivise.ETaskCondiviso getTask(Condivisione.EntityCondivise.ETaskCondiviso task);

    public Condivisione.EntityCondivise.ETaskCondiviso getTask(Condivisione.EntityCondivise.ETaskCondiviso task, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTask(Condivisione.EntityCondivise.ETaskCondiviso task);

    public Ice.AsyncResult begin_getTask(Condivisione.EntityCondivise.ETaskCondiviso task, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTask(Condivisione.EntityCondivise.ETaskCondiviso task, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTask(Condivisione.EntityCondivise.ETaskCondiviso task, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTask(Condivisione.EntityCondivise.ETaskCondiviso task, Callback_AttivitaManager_getTask __cb);

    public Ice.AsyncResult begin_getTask(Condivisione.EntityCondivise.ETaskCondiviso task, java.util.Map<String, String> __ctx, Callback_AttivitaManager_getTask __cb);

    public Condivisione.EntityCondivise.ETaskCondiviso end_getTask(Ice.AsyncResult __result);

    public java.util.ArrayList<Condivisione.EntityCondivise.EProgettoCondiviso> getListProgetti(Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati);

    public java.util.ArrayList<Condivisione.EntityCondivise.EProgettoCondiviso> getListProgetti(Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getListProgetti(Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati);

    public Ice.AsyncResult begin_getListProgetti(Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getListProgetti(Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati, Ice.Callback __cb);

    public Ice.AsyncResult begin_getListProgetti(Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getListProgetti(Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati, Callback_AttivitaManager_getListProgetti __cb);

    public Ice.AsyncResult begin_getListProgetti(Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati, java.util.Map<String, String> __ctx, Callback_AttivitaManager_getListProgetti __cb);

    public java.util.ArrayList<Condivisione.EntityCondivise.EProgettoCondiviso> end_getListProgetti(Ice.AsyncResult __result);

    public java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> getListSottoProgetti(int idprogetto, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati);

    public java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> getListSottoProgetti(int idprogetto, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getListSottoProgetti(int idprogetto, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati);

    public Ice.AsyncResult begin_getListSottoProgetti(int idprogetto, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getListSottoProgetti(int idprogetto, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati, Ice.Callback __cb);

    public Ice.AsyncResult begin_getListSottoProgetti(int idprogetto, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getListSottoProgetti(int idprogetto, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati, Callback_AttivitaManager_getListSottoProgetti __cb);

    public Ice.AsyncResult begin_getListSottoProgetti(int idprogetto, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, boolean abilitati, java.util.Map<String, String> __ctx, Callback_AttivitaManager_getListSottoProgetti __cb);

    public java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> end_getListSottoProgetti(Ice.AsyncResult __result);

    public java.util.ArrayList<Condivisione.EntityCondivise.ETaskCondiviso> getListTask(int idsottoprogetto, boolean abilitati, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente);

    public java.util.ArrayList<Condivisione.EntityCondivise.ETaskCondiviso> getListTask(int idsottoprogetto, boolean abilitati, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getListTask(int idsottoprogetto, boolean abilitati, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente);

    public Ice.AsyncResult begin_getListTask(int idsottoprogetto, boolean abilitati, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getListTask(int idsottoprogetto, boolean abilitati, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, Ice.Callback __cb);

    public Ice.AsyncResult begin_getListTask(int idsottoprogetto, boolean abilitati, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getListTask(int idsottoprogetto, boolean abilitati, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, Callback_AttivitaManager_getListTask __cb);

    public Ice.AsyncResult begin_getListTask(int idsottoprogetto, boolean abilitati, Condivisione.EntityCondivise.EDipendenteCondiviso dipendente, java.util.Map<String, String> __ctx, Callback_AttivitaManager_getListTask __cb);

    public java.util.ArrayList<Condivisione.EntityCondivise.ETaskCondiviso> end_getListTask(Ice.AsyncResult __result);

    public java.util.ArrayList<Condivisione.EntityCondivise.ETaskCondiviso> getListTaskConsulente(Condivisione.EntityCondivise.EConsulenteCondiviso consulente);

    public java.util.ArrayList<Condivisione.EntityCondivise.ETaskCondiviso> getListTaskConsulente(Condivisione.EntityCondivise.EConsulenteCondiviso consulente, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getListTaskConsulente(Condivisione.EntityCondivise.EConsulenteCondiviso consulente);

    public Ice.AsyncResult begin_getListTaskConsulente(Condivisione.EntityCondivise.EConsulenteCondiviso consulente, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getListTaskConsulente(Condivisione.EntityCondivise.EConsulenteCondiviso consulente, Ice.Callback __cb);

    public Ice.AsyncResult begin_getListTaskConsulente(Condivisione.EntityCondivise.EConsulenteCondiviso consulente, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getListTaskConsulente(Condivisione.EntityCondivise.EConsulenteCondiviso consulente, Callback_AttivitaManager_getListTaskConsulente __cb);

    public Ice.AsyncResult begin_getListTaskConsulente(Condivisione.EntityCondivise.EConsulenteCondiviso consulente, java.util.Map<String, String> __ctx, Callback_AttivitaManager_getListTaskConsulente __cb);

    public java.util.ArrayList<Condivisione.EntityCondivise.ETaskCondiviso> end_getListTaskConsulente(Ice.AsyncResult __result);

    public java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> getListSottoprogettiManager(Condivisione.EntityCondivise.EManagerCondiviso manager);

    public java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> getListSottoprogettiManager(Condivisione.EntityCondivise.EManagerCondiviso manager, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getListSottoprogettiManager(Condivisione.EntityCondivise.EManagerCondiviso manager);

    public Ice.AsyncResult begin_getListSottoprogettiManager(Condivisione.EntityCondivise.EManagerCondiviso manager, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getListSottoprogettiManager(Condivisione.EntityCondivise.EManagerCondiviso manager, Ice.Callback __cb);

    public Ice.AsyncResult begin_getListSottoprogettiManager(Condivisione.EntityCondivise.EManagerCondiviso manager, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getListSottoprogettiManager(Condivisione.EntityCondivise.EManagerCondiviso manager, Callback_AttivitaManager_getListSottoprogettiManager __cb);

    public Ice.AsyncResult begin_getListSottoprogettiManager(Condivisione.EntityCondivise.EManagerCondiviso manager, java.util.Map<String, String> __ctx, Callback_AttivitaManager_getListSottoprogettiManager __cb);

    public java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> end_getListSottoprogettiManager(Ice.AsyncResult __result);

    public java.util.ArrayList<Condivisione.EntityCondivise.ETaskCondiviso> getAllTask();

    public java.util.ArrayList<Condivisione.EntityCondivise.ETaskCondiviso> getAllTask(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getAllTask();

    public Ice.AsyncResult begin_getAllTask(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getAllTask(Ice.Callback __cb);

    public Ice.AsyncResult begin_getAllTask(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getAllTask(Callback_AttivitaManager_getAllTask __cb);

    public Ice.AsyncResult begin_getAllTask(java.util.Map<String, String> __ctx, Callback_AttivitaManager_getAllTask __cb);

    public java.util.ArrayList<Condivisione.EntityCondivise.ETaskCondiviso> end_getAllTask(Ice.AsyncResult __result);

    public java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> getAllSp(Condivisione.EntityCondivise.EManagerCondiviso manager);

    public java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> getAllSp(Condivisione.EntityCondivise.EManagerCondiviso manager, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getAllSp(Condivisione.EntityCondivise.EManagerCondiviso manager);

    public Ice.AsyncResult begin_getAllSp(Condivisione.EntityCondivise.EManagerCondiviso manager, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getAllSp(Condivisione.EntityCondivise.EManagerCondiviso manager, Ice.Callback __cb);

    public Ice.AsyncResult begin_getAllSp(Condivisione.EntityCondivise.EManagerCondiviso manager, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getAllSp(Condivisione.EntityCondivise.EManagerCondiviso manager, Callback_AttivitaManager_getAllSp __cb);

    public Ice.AsyncResult begin_getAllSp(Condivisione.EntityCondivise.EManagerCondiviso manager, java.util.Map<String, String> __ctx, Callback_AttivitaManager_getAllSp __cb);

    public java.util.ArrayList<Condivisione.EntityCondivise.ESottoprogettoCondiviso> end_getAllSp(Ice.AsyncResult __result);

    public void eliminaAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa attivita);

    public void eliminaAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa attivita, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_eliminaAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa attivita);

    public Ice.AsyncResult begin_eliminaAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa attivita, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_eliminaAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa attivita, Ice.Callback __cb);

    public Ice.AsyncResult begin_eliminaAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa attivita, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_eliminaAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa attivita, Callback_AttivitaManager_eliminaAttivita __cb);

    public Ice.AsyncResult begin_eliminaAttivita(Condivisione.EntityCondivise.EAttivitaCondivisa attivita, java.util.Map<String, String> __ctx, Callback_AttivitaManager_eliminaAttivita __cb);

    public void end_eliminaAttivita(Ice.AsyncResult __result);

    public java.util.ArrayList<Condivisione.EntityCondivise.EProgettoCondiviso> getListProgettiClienti(Condivisione.EntityCondivise.EClienteCondiviso cliente);

    public java.util.ArrayList<Condivisione.EntityCondivise.EProgettoCondiviso> getListProgettiClienti(Condivisione.EntityCondivise.EClienteCondiviso cliente, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getListProgettiClienti(Condivisione.EntityCondivise.EClienteCondiviso cliente);

    public Ice.AsyncResult begin_getListProgettiClienti(Condivisione.EntityCondivise.EClienteCondiviso cliente, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getListProgettiClienti(Condivisione.EntityCondivise.EClienteCondiviso cliente, Ice.Callback __cb);

    public Ice.AsyncResult begin_getListProgettiClienti(Condivisione.EntityCondivise.EClienteCondiviso cliente, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getListProgettiClienti(Condivisione.EntityCondivise.EClienteCondiviso cliente, Callback_AttivitaManager_getListProgettiClienti __cb);

    public Ice.AsyncResult begin_getListProgettiClienti(Condivisione.EntityCondivise.EClienteCondiviso cliente, java.util.Map<String, String> __ctx, Callback_AttivitaManager_getListProgettiClienti __cb);

    public java.util.ArrayList<Condivisione.EntityCondivise.EProgettoCondiviso> end_getListProgettiClienti(Ice.AsyncResult __result);
}
